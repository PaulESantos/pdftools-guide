"0","# create a function that works for most years"
"0","get_beer_tables <- function(year, month) {"
"0","  "
"0","  # read in the raw PDF"
"0","  raw_text <- pdftools::pdf_text(glue::glue(""pdfs/ttb_monthly_stats_{year}-{month}.pdf"")) %>%"
"0","    str_split(""\n"") %>%"
"0","    unlist()"
"0",""
"0","  ## Build Table"
"0",""
"0","  # find start of table"
"0","  table_start <- stringr::str_which(raw_text, ""MANUFACTURE OF BEER"")"
"0",""
"0","  # End of table (drop all the asterisks and the other descriptors)"
"0","  table_end <- stringr::str_which(raw_text, ""Total Used"")"
"0",""
"0","  # Trim the table to the start/end and drop whitespace at each line"
"0","  table_trimmed <- raw_text[table_start:table_end] %>%"
"0","    str_trim()"
"0",""
"0","  table_trimmed"
"0",""
"0","  ### Remove all the extra whitespace"
"0",""
"0","  # Replace long spaces with a col break symbol"
"0","  squished_table <- str_replace_all(table_trimmed, ""\\s{2,}"", ""|"") %>%"
"0","    str_remove_all("","")"
"0",""
"0","  ### Convert to tibble"
"0",""
"0","  # Convert to tibble"
"0","  raw_df <- enframe(squished_table)"
"0","  "
"0","  # split the rows into their columns"
"0","  beer_df <- suppressWarnings(raw_df %>%"
"0","    separate(value,"
"0","      into = c(""type"", ""month_current"", ""month_prior_year"", ""ytd_current"", ""ytd_prior_year""),"
"0","      sep = ""\\|"""
"0","    ) %>%"
"0","    slice(-1) %>%"
"0","    mutate_at(vars(month_current:ytd_prior_year), as.double) %>%"
"0","    mutate(year = as.integer(year), month = as.integer(month)) %>%"
"0","    select(year, month, type, everything()))"
"0",""
"0","  ### Proper Cleaning"
"0",""
"0","  # ID the specific row/point to split the dataset at."
"0",""
"0","  slice_num <- beer_df %>%"
"0","    # find a string that has MATERIALS USED or IN POUNDS"
"0","    # | means OR"
"0","    filter(str_detect(type, ""MATERIALS USED|IN POUNDS"")) %>%"
"0","    pull(name)"
"0",""
"0","  #### Split dataframe"
"0",""
"0","  # split data into materials vs barrels produced"
"0","  split_df <- beer_df %>%"
"0","    mutate("
"0","      data_type = ifelse(name >= slice_num, ""Pounds of Materials Used"", ""Barrels Produced""),"
"0","      type = str_remove(type, "":"")"
"0","    ) %>%"
"0","    select(data_type, everything(), -name) %>%"
"0","    filter(!str_detect(type, ""IN POUNDS|MATERIALS USED|MANUFACTURE OF BEER|BARRELS"")) %>%"
"0","    group_by(data_type) %>%"
"0","    group_split()"
"0",""
"0","  #### Factor cleaning and final dataframes"
"0",""
"0","  # clean manufacture df"
"0","  manufacture_df <- split_df[[1]] %>%"
"0","    mutate("
"0","      tax_status = case_when("
"0","        type %in% c("
"0","          ""In bottles and cans"", ""In kegs"", ""In barrels and kegs"","
"0","          ""Tax Determined, Premises Use"""
"0","        ) ~ ""Taxable"","
"0","        type == ""Sub Total Taxable"" ~ ""Sub Total Taxable"","
"0","        type %in% c("
"0","          ""For export"", ""For vessels and aircraft"","
"0","          ""Consumed on brewery premises"""
"0","        ) ~ ""Tax Free"","
"0","        type == ""Sub Total Tax-Free"" ~ ""Sub Total Tax-Free"","
"0","        type %in% c("
"0","          ""Production"", ""Total Removals"","
"0","          ""Stocks On Hand end-of-month:"""
"0","        ) ~ ""Totals"""
"0","      ),"
"0","      tax_rate = dplyr::if_else(year <= 2017, ""$7/$18 per barrel"", ""$3.50/$16 per barrel"")"
"0","    ) %>%"
"0","    filter(!is.na(tax_status)) %>%"
"0","    select(data_type, tax_status, everything())"
"0",""
"0","  # clean up the material dataset"
"0","  material_df <- split_df[[2]] %>%"
"0","    mutate("
"0","      material_type = case_when("
"0","        str_detect(type, ""Malt|Corn|Rice|Barley|Wheat"") ~ ""Grain Products"","
"0","        str_detect(type, ""Sugar|Hops|Other"") ~ ""Non-Grain Products"","
"0","        str_detect(type, ""Total"") ~ type"
"0","      )"
"0","    ) %>%"
"0","    select(data_type, material_type, everything())"
"0",""
"0","  # output a list of both dfs"
"0","  list(manufacture_df, material_df)"
"0","}"
